const n=JSON.parse('{"key":"v-3a09e76e","path":"/Other/%E5%86%92%E6%B3%A1%EF%BC%8C%E6%8F%92%E5%85%A5%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.html","title":"冒泡，插入，快速排序","lang":"zh-CN","frontmatter":{"title":"冒泡，插入，快速排序","shortTitle":"","description":"/** * 冒泡算法 * 比较两两值，一次冒泡之后最右边的值肯定是为最大的 * 第二次冒泡，就只要针对除去最后一个值的数值进行冒泡 * [22, 34, 3, 32, 82, 55, 89, 50, 37, 5, 64, 35, 9, 70] */ function bubble_one_time(arr, j) { for (let i = 0; i &lt; arr.length-j; i++) { const element = arr[i]; if (arr[i] &gt; arr[i+1]) { let temp temp = arr[i+1] arr[i+1] = arr[i] arr[i] = temp } } return arr } function bubble_sort (arr) { for (let i = 0; i &lt; arr.length; i++) { arr = bubble_one_time(arr, i) } return arr }","icon":"","author":{"name":"Cap"},"isOriginal":true,"date":"2019-07-26T00:00:00.000Z","category":"","tag":"javascript","sticky":1,"star":false,"article":true,"timeline":true,"image":"","editLink":false,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/Other/%E5%86%92%E6%B3%A1%EF%BC%8C%E6%8F%92%E5%85%A5%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"冒泡，插入，快速排序"}],["meta",{"property":"og:description","content":"/** * 冒泡算法 * 比较两两值，一次冒泡之后最右边的值肯定是为最大的 * 第二次冒泡，就只要针对除去最后一个值的数值进行冒泡 * [22, 34, 3, 32, 82, 55, 89, 50, 37, 5, 64, 35, 9, 70] */ function bubble_one_time(arr, j) { for (let i = 0; i &lt; arr.length-j; i++) { const element = arr[i]; if (arr[i] &gt; arr[i+1]) { let temp temp = arr[i+1] arr[i+1] = arr[i] arr[i] = temp } } return arr } function bubble_sort (arr) { for (let i = 0; i &lt; arr.length; i++) { arr = bubble_one_time(arr, i) } return arr }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2019-07-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"冒泡，插入，快速排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[],"readingTime":{"minutes":2.11,"words":634},"filePathRelative":"Other/冒泡，插入，快速排序.md","localizedDate":"2019年7月26日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * 冒泡算法\\n * 比较两两值，一次冒泡之后最右边的值肯定是为最大的\\n * 第二次冒泡，就只要针对除去最后一个值的数值进行冒泡\\n * [22, 34, 3, 32, 82, 55, 89, 50, 37, 5, 64, 35, 9, 70]\\n */</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">bubble_one_time</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr<span class=\\"token punctuation\\">,</span> j</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">-</span>j<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> element <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">let</span> temp\\n            temp <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n            arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n            arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> temp \\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> arr\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">bubble_sort</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        arr <span class=\\"token operator\\">=</span> <span class=\\"token function\\">bubble_one_time</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> arr\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
