import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as l,a,b as s,d as t,e as r}from"./app-b3a5d769.js";const c="/SunflowerSecret/assets/image-f4eed360.png",d="/SunflowerSecret/assets/image-1-70873602.png",u="/SunflowerSecret/assets/image-4-4719fb63.png",g="/SunflowerSecret/assets/image-2-58d0e7a1.png",m="/SunflowerSecret/assets/image-3-a8c59b11.png",v={},k={href:"https://code.visualstudio.com/insiders/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/GLips/Figma-Context-MCP",target:"_blank",rel:"noopener noreferrer"};function b(h,n){const e=o("ExternalLinkIcon");return p(),l("div",null,[n[2]||(n[2]=a("h2",{id:"前提",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#前提","aria-hidden":"true"},"#"),s(" 前提")],-1)),n[3]||(n[3]=a("p",null,"Github Copilot 开始支持agent模式。意味着我们可以自定义一些tools去丰富agent的能力。接下来就尝试使用agent模式+figma 去自己生成页面，women以小程序页面为例子。",-1)),n[4]||(n[4]=a("h2",{id:"准备",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#准备","aria-hidden":"true"},"#"),s(" 准备")],-1)),n[5]||(n[5]=a("p",null,[s("首先，我们需要下载 "),a("em",null,"vscode insiders"),s(" 版本,"),a("br"),s(" 其次，我们需要copilot体验或者会员权限，")],-1)),a("ul",null,[a("li",null,[a("a",k,[n[0]||(n[0]=s("vscode insiders下载地址")),t(e)])]),a("li",null,[a("a",f,[n[1]||(n[1]=s("Figma-Context-MCP")),t(e)])])]),n[6]||(n[6]=r('<h2 id="第一步-去拿到figma-token-和-link" tabindex="-1"><a class="header-anchor" href="#第一步-去拿到figma-token-和-link" aria-hidden="true">#</a> 第一步，去拿到figma token 和 link</h2><p>登录figma，在左上角点击头像</p><figure><img src="'+c+'" alt="alt " tabindex="0" loading="lazy"><figcaption>alt </figcaption></figure><p>设置token</p><figure><img src="'+d+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>选择你想要agent去实现的一个页面</p><figure><img src="'+u+'" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>拿到link： <code>https://www.figma.com/design/032otzKny3jVZddIUUilCt/TDesign-for-mobile-(Community)?node-id=30761-32239&amp;t=Qh2z6MyZCgZwOwa4-4</code></p><h2 id="在vscode-insiders中配置" tabindex="-1"><a class="header-anchor" href="#在vscode-insiders中配置" aria-hidden="true">#</a> 在vscode insiders中配置</h2><p>打开设置页面，搜索mcp</p><figure><img src="'+g+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>编辑<code>settings.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;mcp&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;inputs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;servers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;figma&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token string">&quot;-y&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;figma-developer-mcp&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;--stdio&quot;</span>
                <span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;FIGMA_API_KEY&quot;</span><span class="token operator">:</span> <span class="token string">&quot;your-figma-key&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始chat" tabindex="-1"><a class="header-anchor" href="#开始chat" aria-hidden="true">#</a> 开始Chat</h2><p>在chat 输入框的左上角，可以看到我们配置的tools</p><blockquote><p>注意，选择的是agent mode</p></blockquote><figure><img src="`+m+`" alt="alt text" tabindex="0" loading="lazy"><figcaption>alt text</figcaption></figure><p>这里建议把我们的上下文也加上，点击 <code>Add Context</code></p><p>选择一个文件夹，这里假设我们的页面叫activity，在接下的prompt中描述需要在文件夹里面干什么。</p><p>测试prompt:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>使用Tdesign 原生小程序<span class="token constant">UI</span>库，开发一个微信小程序页面，
在activity目录下，新建wxml、wxss、js、json文件。
参考链接：<span class="token punctuation">{</span>拿到link<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回车！</p><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><p>接下来你就可以看到agent自己去搜索理解Tdesgin，</p><p>自己去调用figma拿data，然后在你指定的文件夹下输出内容。</p><blockquote><p>这里需要注意的是，它还是有概率会无中生有，造一个不是tdesgin的组件来使用。</p></blockquote><p>可以看到，只要UI设计稍微规范一点，agent实现的效果应该是有80%左右的相似度。</p>`,27))])}const y=i(v,[["render",b],["__file","Github-Copilot-agent-figma-ui.html.vue"]]);export{y as default};
