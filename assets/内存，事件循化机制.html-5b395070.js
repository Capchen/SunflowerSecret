const e=JSON.parse('{"key":"v-8a1d0392","path":"/JS/%E5%86%85%E5%AD%98%EF%BC%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E5%8C%96%E6%9C%BA%E5%88%B6.html","title":"内存，事件循化机制","lang":"zh-CN","frontmatter":{"article":true,"author":{"name":"Cap"},"category":"","date":"2019-05-29T00:00:00.000Z","description":"垃圾回收 引用计数 这个算法主要是定义\\"对象有没有被其他对象引用\\"为依据，来决定是否回收。 但是如果两个对象之前互相引用，那么就会回收不了 标记清除 这个算法是定义\\"对象能否被获得\\"为依据，能否被获得指的是从根元素，也可以理解为全局，去获得被引用的元素，垃圾回收器将定期从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象……从根开始，垃圾回收器将找到所有可以获得的对象和收集所有不能获得的对象。 现在所有浏览器的垃圾回收机制都是基于标记清除的算法来实现优化。 Event Loop","editLink":false,"icon":"","image":"","isOriginal":true,"shortTitle":"","star":false,"sticky":1,"tag":"javascript","timeline":true,"title":"内存，事件循化机制","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/JS/%E5%86%85%E5%AD%98%EF%BC%8C%E4%BA%8B%E4%BB%B6%E5%BE%AA%E5%8C%96%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"内存，事件循化机制"}],["meta",{"property":"og:description","content":"垃圾回收 引用计数 这个算法主要是定义\\"对象有没有被其他对象引用\\"为依据，来决定是否回收。 但是如果两个对象之前互相引用，那么就会回收不了 标记清除 这个算法是定义\\"对象能否被获得\\"为依据，能否被获得指的是从根元素，也可以理解为全局，去获得被引用的元素，垃圾回收器将定期从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象……从根开始，垃圾回收器将找到所有可以获得的对象和收集所有不能获得的对象。 现在所有浏览器的垃圾回收机制都是基于标记清除的算法来实现优化。 Event Loop"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2019-05-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内存，事件循化机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":2,"title":"垃圾回收","slug":"垃圾回收","link":"#垃圾回收","children":[{"level":3,"title":"引用计数","slug":"引用计数","link":"#引用计数","children":[]},{"level":3,"title":"标记清除","slug":"标记清除","link":"#标记清除","children":[]},{"level":3,"title":"Event Loop","slug":"event-loop","link":"#event-loop","children":[]}]}],"readingTime":{"minutes":4.63,"words":1390},"filePathRelative":"JS/内存，事件循化机制.md","localizedDate":"2019年5月29日","excerpt":"<h2> 垃圾回收</h2>\\n<h3> 引用计数</h3>\\n<p>这个算法主要是定义\\"对象有没有被其他对象引用\\"为依据，来决定是否回收。<br>\\n但是如果两个对象之前互相引用，那么就会回收不了</p>\\n<h3> 标记清除</h3>\\n<p>这个算法是定义\\"对象能否被获得\\"为依据，能否被获得指的是从根元素，也可以理解为全局，去获得被引用的元素，垃圾回收器将定期从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象……从根开始，垃圾回收器将找到所有可以获得的对象和收集所有不能获得的对象。</p>\\n<p>现在所有浏览器的垃圾回收机制都是基于标记清除的算法来实现优化。</p>\\n<h3> Event Loop</h3>","autoDesc":true}');export{e as data};
