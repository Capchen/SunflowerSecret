import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,a}from"./app-bdbabe69.js";const n={};function d(o,e){return t(),i("div",null,e[0]||(e[0]=[a('<h2 id="可视化编辑器的实现思路" tabindex="-1"><a class="header-anchor" href="#可视化编辑器的实现思路" aria-hidden="true">#</a> 可视化编辑器的实现思路</h2><h2 id="编辑器" tabindex="-1"><a class="header-anchor" href="#编辑器" aria-hidden="true">#</a> 编辑器</h2><ul><li><p>编辑器可以理解为就是操作页面，分为左面板、工作区、头部工具栏和右面板。</p><p>一般左面板是等待拖拽的组件，工作区是接收组件的地方，右面板是调整组件</p><p>细节的地方，例如样式/事件等。</p></li></ul><p>工作区的画布如果需要理解左面板的组件，就需要拿到具体的函数去render，这里用到了</p><p>动态编译vue模版</p><h2 id="runtime" tabindex="-1"><a class="header-anchor" href="#runtime" aria-hidden="true">#</a> Runtime</h2><ul><li>Runtime就是指能实时显示你在工作区操作的结果，tmagic-editor为了实现render函数和编辑器解藕，所以不使用render的方式</li></ul><p>Runtime的实现是新的一个工程，采用runtimeUrl的iframe嵌入方式去和编辑器互动。Runtime要渲染编辑器的组件，就需要拿到编辑器的dsl，那么就是通过监听message的方式去进行通信。</p><p>而且runtime也需要将dom同步给编辑器，不然编辑器不知道此刻你选择的是哪个组件</p><h2 id="dsl" tabindex="-1"><a class="header-anchor" href="#dsl" aria-hidden="true">#</a> DSL</h2><ul><li><p>tmagic-editor提供了三个版本的解析渲染组件（vue3/vue2/react），渲染组件<strong>ui-xx</strong></p><p>是和Runtime对应的，每个DSL都需要对应的Runtime去解析。</p></li></ul><p>DSL解析的实现：通过component组件的 <strong>is</strong> 属性去动态渲染。例如。左面板有个type为my-button的组件，那么DSL里面就一定有一个组件名为my-button的组件。这是映射关系。</p>',12)]))}const m=r(n,[["render",d],["__file","tmagic-editor.html.vue"]]);export{m as default};
