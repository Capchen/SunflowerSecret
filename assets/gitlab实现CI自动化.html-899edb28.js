import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,b as n,d as a,a as l}from"./app-686b90b8.js";const r="/SunflowerSecret/assets/images/CLI/1592821714718-521138eb-2782-4eb9-b9f5-2454126ea0b9.png",o="/SunflowerSecret/assets/images/CLI/1592821714838-2df4f723-224b-43d4-8e7f-95ff996fa376.png",u="/SunflowerSecret/assets/images/CLI/1592821714985-e0570af1-ec3c-49ec-b588-154b237e80ee.png",c="/SunflowerSecret/assets/images/CLI/1592821715227-63ec4bda-4aab-4e80-8ee2-241462f6f6c8.png",p={},d=r+"#width=888",b=o+"#",g=u+"#",m=c+"#";function k(v,s){return t(),i("div",null,s[0]||(s[0]=[n("h2",{id:"实现过程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实现过程","aria-hidden":"true"},"#"),a(" 实现过程")],-1),n("ol",null,[n("li",null,"准备好gitlab，需要注意版本信息，需要与runner匹配兼容"),n("li",null,"准备好gitlab-runner ，需要注意版本信息，需要与gitlab匹配兼容"),n("li",null,"登录gitlab查看gitlab的CI注册地址与token"),n("li",null,"运行gitlab-runner的注册功能将gitlab-runner注册到gitlab中"),n("li",null,"在该项目中的根目录增加 .gitlab-ci.yaml文件"),n("li",null,"gitlab会自动检测gitlab-ci.yaml这个文件，并根据内容执行自动CI")],-1),n("figure",null,[n("img",{src:d,alt:"123",tabindex:"0",loading:"lazy"}),n("figcaption",null,"123")],-1),l(`<h3 id="gitlab-runner安装" tabindex="-1"><a class="header-anchor" href="#gitlab-runner安装" aria-hidden="true">#</a> gitlab-runner安装</h3><p>gitlab-runner是gitlab的运行组件，也就是gitlab触发的所有ci，gitlab都会交给gitlab-runner去执行自动过程，gitlab-runner会自动克隆一份当前项目的当前代码，执行yaml定义的CI操作<br><strong>注意版本号，公司内部全部最新即可</strong></p><h4 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h4><blockquote><p>因为当前系统是使用docker部署，并且运行等资源消耗较高，这里直接安装，不要使用docker运行runner</p></blockquote><h5 id="开始安装gitlab-runner-yum存储库" tabindex="-1"><a class="header-anchor" href="#开始安装gitlab-runner-yum存储库" aria-hidden="true">#</a> 开始安装gitlab-runner yum存储库</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token punctuation">[</span>https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh<span class="token punctuation">]</span><span class="token punctuation">(</span>https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>


<span class="token comment"># 检查你的gitlab版本号</span>
yum <span class="token parameter variable">--showduplicates</span> list  gitlab-ci-multi-runner    <span class="token comment"># gitlab 8 或者9 版本对应的版本系列</span>
yum <span class="token parameter variable">--showduplicates</span> list  gitlab-runner  <span class="token comment"># 高版本对应的runner系列，这里使用这个即可</span>
<span class="token comment"># 安装最新版</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二</h4><h5 id="下载gitlab-runner" tabindex="-1"><a class="header-anchor" href="#下载gitlab-runner" aria-hidden="true">#</a> 下载gitlab-runner</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Linux x86-64</span>
$ <span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/local/bin/gitlab-runner <span class="token punctuation">[</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64<span class="token punctuation">]</span><span class="token punctuation">(</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64<span class="token punctuation">)</span>
<span class="token comment"># Linux x86</span>
$ <span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/local/bin/gitlab-runner <span class="token punctuation">[</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-386<span class="token punctuation">]</span><span class="token punctuation">(</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-386<span class="token punctuation">)</span>
<span class="token comment"># Linux arm</span>
$ <span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /usr/local/bin/gitlab-runner <span class="token punctuation">[</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-arm<span class="token punctuation">]</span><span class="token punctuation">(</span>https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-arm<span class="token punctuation">)</span>
<span class="token comment"># 授权</span>
$ <span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/gitlab-runner
$ <span class="token function">sudo</span> <span class="token function">cp</span> /usr/local/bin/gitlab-runner /usr/bin
<span class="token comment"># 创建gitlab-runner用户</span>
$ <span class="token function">sudo</span> <span class="token function">useradd</span> <span class="token parameter variable">--comment</span> <span class="token string">&#39;GitLab Runner&#39;</span> --create-home gitlab-runner <span class="token parameter variable">--shell</span> /bin/bash
<span class="token comment"># 安装gitlab-runner</span>
$ <span class="token function">sudo</span> gitlab-runner <span class="token function">install</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>gitlab-runner --working-directory<span class="token operator">=</span>/home/gitlab-runner
<span class="token comment"># 启动</span>
$ <span class="token function">sudo</span> gitlab-runner start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gitlab-runner启动参数修改" tabindex="-1"><a class="header-anchor" href="#gitlab-runner启动参数修改" aria-hidden="true">#</a> gitlab-runner启动参数修改</h3><p>runner默认使用程序用户gitlab-runner运行，一些比如容器操作，挂载目录删除，修改等等，都需要使用root来操作，所以需要做一些权限修改</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 根据返回结果，找到需要service文件</span>
systemctl status gitlab-runner
  ● gitlab-runner.service - GitLab Runner
     Loaded: loaded <span class="token punctuation">(</span>/etc/systemd/system/gitlab-runner.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: disabled<span class="token punctuation">)</span>   <span class="token comment"># 注意这一行</span>
     Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Wed <span class="token number">2019</span>-08-07 05:11:29 EDT<span class="token punctuation">;</span> <span class="token number">2</span> weeks <span class="token number">5</span> days ago
   Main PID: <span class="token number">310156</span> <span class="token punctuation">(</span>gitlab-runner<span class="token punctuation">)</span>
<span class="token comment"># 将以上文件中的 --user gitlab-runner 修改为root</span>
<span class="token function">vi</span> /etc/systemd/system/gitlab-runner.service 
  修改
  <span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/lib/gitlab-runner/gitlab-runner <span class="token string">&quot;run&quot;</span> <span class="token string">&quot;--working-directory&quot;</span> <span class="token string">&quot;/home/gitlab-runner&quot;</span> <span class="token string">&quot;--config&quot;</span> <span class="token string">&quot;/etc/gitlab-runner/config.toml&quot;</span> <span class="token string">&quot;--service&quot;</span> <span class="token string">&quot;gitlab-runner&quot;</span> <span class="token string">&quot;--syslog&quot;</span> <span class="token string">&quot;--user&quot;</span> <span class="token string">&quot;gitlab-runner&quot;</span>
  为
  <span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/lib/gitlab-runner/gitlab-runner <span class="token string">&quot;run&quot;</span> <span class="token string">&quot;--working-directory&quot;</span> <span class="token string">&quot;/home/gitlab-runner&quot;</span> <span class="token string">&quot;--config&quot;</span> <span class="token string">&quot;/etc/gitlab-runner/config.toml&quot;</span> <span class="token string">&quot;--service&quot;</span> <span class="token string">&quot;gitlab-runner&quot;</span> <span class="token string">&quot;--syslog&quot;</span> <span class="token string">&quot;--user&quot;</span> <span class="token string">&quot;root&quot;</span>
<span class="token comment"># 启动gitlab-runner</span>
systemctl start gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册gitlab-runner" tabindex="-1"><a class="header-anchor" href="#注册gitlab-runner" aria-hidden="true">#</a> 注册gitlab-runner</h3><p>gitlab中获取地址与token，gitlab-runner使用该信息进行注册，gitlab中显示注册节点</p>`,14),n("ol",null,[n("li",null,[n("p",null,"查看地址与token，注意需要有该项目的管理员权限")]),n("li",null,[n("figure",null,[n("img",{src:b,alt:"33",tabindex:"0",loading:"lazy"}),n("figcaption",null,"33")])]),n("li",null,[n("p",null,"记录地址与token信息")]),n("li",null,[n("figure",null,[n("img",{src:g,alt:"22",tabindex:"0",loading:"lazy"}),n("figcaption",null,"22")])]),n("li",null,[n("p",null,[a("使用此信息进行runner注册"),n("br"),n("strong",null,"注册runner"),n("br"),a(" sudo gitlab-runner register"),n("br"),a(" 输入上述地址"),n("br"),a(" 输入上述token"),n("br"),a(" 输入说明"),n("br"),a(" 输入tag     # 注 此tag将会频繁使用，建议使用有意义，并且有针对性的tag，gitlab-ci.yaml使用此tag标识的机器推送CI数据"),n("br"),a(" 输入shell   # 注 此处是runner运行所支持的环境，可以是 docker shell virtualbox k8s 等等多种类型，这里使用shell"),n("br"),a(" 6.    检查成功是否成功注册"),n("br"),a(" 7.    "),n("img",{src:m,alt:"11",loading:"lazy"})])])],-1)]))}const q=e(p,[["render",k],["__file","gitlab实现CI自动化.html.vue"]]);export{q as default};
