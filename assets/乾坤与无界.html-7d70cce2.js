const e=JSON.parse('{"key":"v-547281ba","path":"/%E5%BE%AE%E5%89%8D%E7%AB%AF/%E4%B9%BE%E5%9D%A4%E4%B8%8E%E6%97%A0%E7%95%8C.html","title":"乾坤与无界","lang":"zh-CN","frontmatter":{"article":true,"author":{"name":"Cap"},"category":"","date":"2023-12-29T00:00:00.000Z","description":"什么是微前端 微前端是一种多个团队通过独立发布功能的方式来共同构建现代化 web 应用的技术手段及方法策略。 面临的主要问题 如何解决css污染 如何解决js污染 如何解决应用间通信 如何保持子应用的路由状态 iframe方案 主要是利用浏览器原生标签&lt;iframe&gt;提供的能力 优点 浏览器原生支持，完美隔离 上手简单","editLink":false,"icon":"","image":"","isOriginal":true,"shortTitle":"微前端框架","star":false,"sticky":1,"tag":"","timeline":true,"title":"乾坤与无界","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/%E5%BE%AE%E5%89%8D%E7%AB%AF/%E4%B9%BE%E5%9D%A4%E4%B8%8E%E6%97%A0%E7%95%8C.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"乾坤与无界"}],["meta",{"property":"og:description","content":"什么是微前端 微前端是一种多个团队通过独立发布功能的方式来共同构建现代化 web 应用的技术手段及方法策略。 面临的主要问题 如何解决css污染 如何解决js污染 如何解决应用间通信 如何保持子应用的路由状态 iframe方案 主要是利用浏览器原生标签&lt;iframe&gt;提供的能力 优点 浏览器原生支持，完美隔离 上手简单"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/SunflowerSecret/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"乾坤与无界"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:published_time","content":"2023-12-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"乾坤与无界\\",\\"image\\":[\\"https://mister-hope.github.io/SunflowerSecret/\\"],\\"datePublished\\":\\"2023-12-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":2,"title":"什么是微前端","slug":"什么是微前端","link":"#什么是微前端","children":[]},{"level":2,"title":"面临的主要问题","slug":"面临的主要问题","link":"#面临的主要问题","children":[]},{"level":2,"title":"iframe方案","slug":"iframe方案","link":"#iframe方案","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]},{"level":2,"title":"single-spa方案","slug":"single-spa方案","link":"#single-spa方案","children":[]},{"level":2,"title":"乾坤的解决方案","slug":"乾坤的解决方案","link":"#乾坤的解决方案","children":[]},{"level":2,"title":"无界的解决方案","slug":"无界的解决方案","link":"#无界的解决方案","children":[{"level":3,"title":"路由同步机制（解决无法保持子应用路由状态）","slug":"路由同步机制-解决无法保持子应用路由状态","link":"#路由同步机制-解决无法保持子应用路由状态","children":[]},{"level":3,"title":"iframe 连接机制(解决DOM结构不共享)","slug":"iframe-连接机制-解决dom结构不共享","link":"#iframe-连接机制-解决dom结构不共享","children":[]},{"level":3,"title":"应用加载机制（解决每次启动都是初始化，性能有瓶颈）","slug":"应用加载机制-解决每次启动都是初始化-性能有瓶颈","link":"#应用加载机制-解决每次启动都是初始化-性能有瓶颈","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":4.42,"words":1326},"filePathRelative":"微前端/乾坤与无界.md","localizedDate":"2023年12月29日","excerpt":"<h2> 什么是微前端</h2>\\n<blockquote>\\n<p>微前端是一种多个团队通过独立发布功能的方式来共同构建现代化 web 应用的技术手段及方法策略。</p>\\n</blockquote>\\n<h2> 面临的主要问题</h2>\\n<ol>\\n<li>如何解决css污染</li>\\n<li>如何解决js污染</li>\\n<li>如何解决应用间通信</li>\\n<li>如何保持子应用的路由状态</li>\\n</ol>\\n<h2> iframe方案</h2>\\n<p>主要是利用浏览器原生标签<code>&lt;iframe&gt;</code>提供的能力</p>\\n<h3> 优点</h3>\\n<ol>\\n<li>浏览器原生支持，完美隔离</li>\\n<li>上手简单</li>\\n</ol>","autoDesc":true}');export{e as data};
