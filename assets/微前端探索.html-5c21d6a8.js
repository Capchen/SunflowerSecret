import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,d as i}from"./app-a5741a8e.js";const h={},d=i('<h3 id="现前端架构-bf2020" tabindex="-1"><a class="header-anchor" href="#现前端架构-bf2020" aria-hidden="true">#</a> 现前端架构（BF2020）</h3><p>1.是否需要基于现公司的架构写个文档（写）<br> 2.参考之后的优化点</p><h4 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h4><ul><li>不同的业务为不同的仓库，独立维护。如：对话机器人｜中控｜智能客服</li><li>可快速启动单个模块，按需打包，按需部署</li><li>统一技术栈（vue）</li><li>基于docker的方式使用common-module公共组件，快速部署快速调试</li></ul><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4><ul><li>子工程切换相当于重新加载了一个应用</li><li>子工程无法使用全局store，现在都是通过localstorage来获取些公共信息</li><li>多个子系统的对接，例如BI，运营平台</li></ul><h3 id="美团微前端实践" tabindex="-1"><a class="header-anchor" href="#美团微前端实践" aria-hidden="true">#</a> 美团微前端实践</h3><p>名称：基于React技术栈的中心路由基座式微前端<br> pc/h5/ 对应有个基座工程，主要负责路由/子项目注册/复用模块</p><p>基座工程和子工程联系起来的桥梁则是<strong>子工程的入口文件地址和路由地址的映射信息</strong>。这些映射信息可以让基座工程准确地发现子工程资源的路径从而进行加载。</p><h4 id="动态路由" tabindex="-1"><a class="header-anchor" href="#动态路由" aria-hidden="true">#</a> 动态路由</h4><h3 id="需要解决的问题" tabindex="-1"><a class="header-anchor" href="#需要解决的问题" aria-hidden="true">#</a> 需要解决的问题</h3><h4 id="多个独立的子业务如何统一ui体验-css和公共组件" tabindex="-1"><a class="header-anchor" href="#多个独立的子业务如何统一ui体验-css和公共组件" aria-hidden="true">#</a> 多个独立的子业务如何统一UI体验（CSS和公共组件）</h4><h4 id="我们如何确保一个团队不会覆盖另一个团队编写的css-todo" tabindex="-1"><a class="header-anchor" href="#我们如何确保一个团队不会覆盖另一个团队编写的css-todo" aria-hidden="true">#</a> <em>我们如何确保一个团队不会覆盖另一个团队编写的CSS？（todo）</em></h4><h4 id="微应用之间如何共享全局信息-store" tabindex="-1"><a class="header-anchor" href="#微应用之间如何共享全局信息-store" aria-hidden="true">#</a> 微应用之间如何共享全局信息（store）</h4><h4 id="微应用中的路由如何管理-router" tabindex="-1"><a class="header-anchor" href="#微应用中的路由如何管理-router" aria-hidden="true">#</a> 微应用中的路由如何管理（router）</h4><h1 id="从知识库切入-实现微前端" tabindex="-1"><a class="header-anchor" href="#从知识库切入-实现微前端" aria-hidden="true">#</a> 从知识库切入，实现微前端</h1><ul><li>顺带整合nginx</li><li>打包方式选择性调整</li><li>公共组件</li></ul>',17),t=[d];function n(s,o){return e(),r("div",null,t)}const u=a(h,[["render",n],["__file","微前端探索.html.vue"]]);export{u as default};
