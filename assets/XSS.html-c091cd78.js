const e=JSON.parse('{"key":"v-33fb4185","path":"/Safety/XSS.html","title":"XSS","lang":"zh-CN","frontmatter":{"article":true,"author":{"name":"Cap"},"category":"","date":"2020-09-01T00:00:00.000Z","description":"Cross-site scripting(跨站脚本攻击) 背景和现状 当网景（Netscape）最初推出JavaScript语言时，他们也察觉到准许网页服务器传送可执行的程式码给一个浏览器的安全风险（即使仅是在一个浏览器的沙盒里）。它所造成的一个关键的问题在于使用者同时开启多个浏览器视窗时，在某些例子里，网页里的片断程式码被允许从另一个网页或物件取出资料，而因为恶意的网站可以用这个方法来尝试窃取机密资讯，所以在某些情形，这应是完全被禁止的。为了解决这个问题，浏览器采用了同源决策——仅允许来自相同网域名称系统和使用相同协定的物件与网页之间的任何互动。","editLink":false,"icon":"","image":"","isOriginal":true,"shortTitle":"","star":false,"sticky":1,"tag":"xss","timeline":true,"title":"XSS","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/Safety/XSS.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"XSS"}],["meta",{"property":"og:description","content":"Cross-site scripting(跨站脚本攻击) 背景和现状 当网景（Netscape）最初推出JavaScript语言时，他们也察觉到准许网页服务器传送可执行的程式码给一个浏览器的安全风险（即使仅是在一个浏览器的沙盒里）。它所造成的一个关键的问题在于使用者同时开启多个浏览器视窗时，在某些例子里，网页里的片断程式码被允许从另一个网页或物件取出资料，而因为恶意的网站可以用这个方法来尝试窃取机密资讯，所以在某些情形，这应是完全被禁止的。为了解决这个问题，浏览器采用了同源决策——仅允许来自相同网域名称系统和使用相同协定的物件与网页之间的任何互动。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:tag","content":"xss"}],["meta",{"property":"article:published_time","content":"2020-09-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"XSS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":3,"title":"背景和现状","slug":"背景和现状","link":"#背景和现状","children":[]},{"level":3,"title":"什么是XSS","slug":"什么是xss","link":"#什么是xss","children":[]},{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":3,"title":"演示环节","slug":"演示环节","link":"#演示环节","children":[]},{"level":3,"title":"注入方法","slug":"注入方法","link":"#注入方法","children":[]},{"level":3,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":2,"title":"检测方法","slug":"检测方法","link":"#检测方法","children":[{"level":3,"title":"工具扫描","slug":"工具扫描","link":"#工具扫描","children":[]},{"level":3,"title":"手动检测","slug":"手动检测","link":"#手动检测","children":[]}]},{"level":2,"title":"预防措施","slug":"预防措施","link":"#预防措施","children":[{"level":3,"title":"（阻止恶意代码被提交到后端）--> 输入过滤转义","slug":"阻止恶意代码被提交到后端-输入过滤转义","link":"#阻止恶意代码被提交到后端-输入过滤转义","children":[]},{"level":3,"title":"（阻止浏览器执行恶意代码）--> 防止HTML中出现注入","slug":"阻止浏览器执行恶意代码-防止html中出现注入","link":"#阻止浏览器执行恶意代码-防止html中出现注入","children":[]},{"level":3,"title":"内容安全策略（CSP）","slug":"内容安全策略-csp","link":"#内容安全策略-csp","children":[]}]}],"readingTime":{"minutes":6.99,"words":2096},"filePathRelative":"Safety/XSS.md","localizedDate":"2020年9月1日","excerpt":"<h1> Cross-site scripting(跨站脚本攻击)</h1>\\n<h3> 背景和现状</h3>\\n<p>当网景（Netscape）最初推出JavaScript语言时，他们也察觉到准许网页服务器传送可执行的程式码给一个浏览器的安全风险（即使仅是在一个浏览器的沙盒里）。它所造成的一个关键的问题在于使用者同时开启多个浏览器视窗时，在某些例子里，网页里的片断程式码被允许从另一个网页或物件取出资料，而因为恶意的网站可以用这个方法来尝试窃取机密资讯，所以在某些情形，这应是完全被禁止的。为了解决这个问题，浏览器采用了同源决策——仅允许来自相同网域名称系统和使用相同协定的物件与网页之间的任何互动。</p>","autoDesc":true}');export{e as data};
