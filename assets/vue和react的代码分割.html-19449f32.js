const e=JSON.parse(`{"key":"v-457ee285","path":"/Webpack/vue%E5%92%8Creact%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%86%E5%89%B2.html","title":"vue和react的代码分割","lang":"zh-CN","frontmatter":{"title":"vue和react的代码分割","shortTitle":"","description":"vue中的代码分割（路由懒加载） 结合异步组件和webpack的代码分割功能来实现路由组件的懒加载 链接地址&nbsp;https://router.vuejs.org/zh/guide/advanced/lazy-loading.html 首先，将异步组件定义为返回一个Promise的工厂函数 const foo = () =&gt; Promise.resolve({ /*组件定义对象*/ })&nbsp; 然后根据webpack代码分割规则，定义分割点 import('./Foo.vue')&nbsp; // 返回Promise","icon":"","author":{"name":"Cap"},"isOriginal":true,"date":"2019-06-26T00:00:00.000Z","category":"","tag":"webpack","sticky":1,"star":false,"article":true,"timeline":true,"image":"","editLink":false,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Webpack/vue%E5%92%8Creact%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%86%E5%89%B2.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"vue和react的代码分割"}],["meta",{"property":"og:description","content":"vue中的代码分割（路由懒加载） 结合异步组件和webpack的代码分割功能来实现路由组件的懒加载 链接地址&nbsp;https://router.vuejs.org/zh/guide/advanced/lazy-loading.html 首先，将异步组件定义为返回一个Promise的工厂函数 const foo = () =&gt; Promise.resolve({ /*组件定义对象*/ })&nbsp; 然后根据webpack代码分割规则，定义分割点 import('./Foo.vue')&nbsp; // 返回Promise"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:tag","content":"webpack"}],["meta",{"property":"article:published_time","content":"2019-06-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue和react的代码分割\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":3,"title":"vue中的代码分割（路由懒加载）","slug":"vue中的代码分割-路由懒加载","link":"#vue中的代码分割-路由懒加载","children":[]},{"level":3,"title":"react中的代码分割","slug":"react中的代码分割","link":"#react中的代码分割","children":[]}],"readingTime":{"minutes":1.65,"words":494},"filePathRelative":"Webpack/vue和react的代码分割.md","localizedDate":"2019年6月26日","excerpt":"<h3> vue中的代码分割（路由懒加载）</h3>\\n<p>结合异步组件和webpack的代码分割功能来实现路由组件的懒加载</p>\\n<blockquote>\\n<p>链接地址&nbsp;<a href=\\"https://router.vuejs.org/zh/guide/advanced/lazy-loading.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://router.vuejs.org/zh/guide/advanced/lazy-loading.html</a></p>\\n</blockquote>\\n<p>首先，将异步组件定义为返回一个Promise的工厂函数<br>\\n<code>const foo = () =&gt; Promise.resolve({ /*组件定义对象*/ })</code>&nbsp;<br>\\n然后根据webpack代码分割规则，定义分割点<br>\\n<code>import('./Foo.vue')</code>&nbsp; // 返回Promise</p>","autoDesc":true}`);export{e as data};
