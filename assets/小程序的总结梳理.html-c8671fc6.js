import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,a as p}from"./app-449bb4de.js";const r={};function o(t,l){return a(),e("div",null,l[0]||(l[0]=[p('<h2 id="面对的情况" tabindex="-1"><a class="header-anchor" href="#面对的情况" aria-hidden="true">#</a> 面对的情况</h2><p>初来乍到，公司只有APP和H5，用户的转换量很少。因为作为中老年为主的患者，第一步去下载APP，对他们来说就已经有一定的成本了。特别是安卓有各种应用市场，APP Stroe有各种验证。小程序以微信为载体，在一定程度上大大降低了用户的操作门槛。</p><h2 id="业务场景分析" tabindex="-1"><a class="header-anchor" href="#业务场景分析" aria-hidden="true">#</a> 业务场景分析</h2><ol><li><p>首先面向的用户</p><p>面向的群里的帕金森患者，多以中老年群体为主。</p></li><li><p>主要的业务场景，就是给患者提供的服务</p><p>小程序提供图文问诊服务，患者和医生的在线IM聊天，直播分享</p></li><li><p>关键的技术节点</p><p>IM聊天、分享、直播、图文问诊</p></li></ol><h2 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型" aria-hidden="true">#</a> 技术选型</h2><p>总览小程序框架</p><ul><li>uni-app</li><li>taro</li><li>mpvue</li><li>wepy</li><li>微信小程序原生开发</li></ul><p>在我们对比各个框架细节的时候，需要先明确我们当前产品的业务前提</p><ol><li>不需要跨端，聚焦点就是微信平台</li><li>有一定的适老化要求</li><li>需要快速开发，快速验证，快速推广</li></ol><p>我们明确了产品定位和规划，再来根据自身的前端技术栈，去看一些技术前提</p><ol><li>团队主要是vue技术栈为主</li><li>团队的开发人员中级占比最多</li><li>团队微信小程序的开发经验几乎为0</li></ol><p>以上两个维度的思考，其实我们就可以抽象出我们作为技术选型的打分表</p><ol><li>跨端能力</li><li>UI组件库的生态</li><li>工程化能力</li><li>DSL的支持</li><li>上手成本</li><li>社区活跃度</li></ol><p>综合评分，平衡取舍，作为当下的最佳选择，我们决定用Taro3来开发我们的第一款小程序。</p><h2 id="架构设计" tabindex="-1"><a class="header-anchor" href="#架构设计" aria-hidden="true">#</a> 架构设计</h2><p>确定了技术实现方案，接下来要做的就是如何将小程序放入我们的前端体系，或者是软件体系中来了。</p><p>个人觉得无非就是基于以下6个步骤去看，在每一个步骤上，我们去看如何把这个链路打通，并且有积累有沉淀。</p><ol><li>搭建基础工程</li><li>抽取成模版代码，加入到脚手架中</li><li>小程序基础能力抽取，组件库的抽取，npm包形式</li><li>CICD的接入</li><li>规范测试与发布流程</li><li>建立线上日志收集，告警提醒机制</li></ol>',18)]))}const n=i(r,[["render",o],["__file","小程序的总结梳理.html.vue"]]);export{n as default};
