import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as r,a as l}from"./app-74fd215c.js";const o={};function d(h,a){return i(),r("div",null,a[0]||(a[0]=[l('<h1 id="常见编程概念" tabindex="-1"><a class="header-anchor" href="#常见编程概念" aria-hidden="true">#</a> 常见编程概念</h1><h2 id="变量与可变性" tabindex="-1"><a class="header-anchor" href="#变量与可变性" aria-hidden="true">#</a> 变量与可变性</h2><ol><li>可变变量不能改变变量的类型，但可以改变变量的值。</li><li>隐藏（Shadowing）：可以定义一个与之前变量同名的新变量，而新变量会覆盖之前的变量。</li></ol><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h3 id="scalar-标量" tabindex="-1"><a class="header-anchor" href="#scalar-标量" aria-hidden="true">#</a> scalar 标量</h3><ol><li>整型 （i 是有符号，u 是没有符号）</li><li>浮点型 （单精度 f32 和双精度 f64）</li><li>布尔型 (bool)</li><li>字符类 (char)</li></ol><h3 id="compound-复合" tabindex="-1"><a class="header-anchor" href="#compound-复合" aria-hidden="true">#</a> compound 复合</h3><ol><li>元组（(1,1.2,true)括号表示，类型可以不一样）</li><li>数组（[1,2,3]类型需要一样）</li></ol><blockquote><p>注： vector 是长度可伸缩的数组</p></blockquote><h2 id="控制流" tabindex="-1"><a class="header-anchor" href="#控制流" aria-hidden="true">#</a> 控制流</h2><h3 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h3><ol><li>loop循环，使用break返回，如果需要返回值，可以跟在break后面<code>break result</code></li><li>如果存在嵌套循环，break 和 continue 应用于此时最内层的循环, 使用循环标签来制定操作的哪一层循环</li><li>while循环</li><li>for...in...循环</li></ol>',12)]))}const t=e(o,[["render",d],["__file","常见编程概念.html.vue"]]);export{t as default};
