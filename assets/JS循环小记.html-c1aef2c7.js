import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as u,a as e,b as s,e as o,d as a}from"./app-75d14cdb.js";const r={},c={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in",target:"_blank",rel:"noopener noreferrer"},d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Enumerability_and_ownership_of_properties",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables",target:"_blank",rel:"noopener noreferrer"};function m(b,n){const t=l("ExternalLinkIcon");return i(),u("div",null,[n[22]||(n[22]=e(`<h3 id="循环类型" tabindex="-1"><a class="header-anchor" href="#循环类型" aria-hidden="true">#</a> 循环类型</h3><p>在ECMA262标准第三版中定义了四种类型的循环</p><ol><li>for</li><li>while</li><li>do...while...</li><li>for...in...</li></ol><p>for in 循环比其他几种要慢，这是因为每次迭代时都会搜索实例和原型对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> object<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码是vscode快速补全插件带出来的forin循环，加了hasOwnProperty判断</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">objCustom</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">arrCustom</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> iterable <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
iterable<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 0, 1, 2, &quot;foo&quot;, &quot;arrCustom&quot;, &quot;objCustom&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>iterable<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 0, 1, 2, &quot;foo&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码就直观了。<br> 所以除非明确需要迭代一个属性数量未知的对象，否则避免使用forin，用它来遍历数组也是得不偿失</p><p>至于 <code>for...of</code></p>`,9)),s("blockquote",null,[s("p",null,[s("a",c,[n[0]||(n[0]=s("code",null,"for...in",-1)),o(t)]),n[3]||(n[3]=a(" 语句以原始插入顺序迭代对象的")),s("a",d,[n[1]||(n[1]=a("可枚举属性")),o(t)]),n[4]||(n[4]=a("。")),n[5]||(n[5]=s("br",null,null,-1)),n[6]||(n[6]=s("code",null,"for...of",-1)),n[7]||(n[7]=a(" 语句遍历")),s("a",k,[n[2]||(n[2]=a("可迭代对象")),o(t)]),n[8]||(n[8]=a("定义要迭代的数据。"))])]),n[23]||(n[23]=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs 3, 5, 7</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),s("p",null,[n[10]||(n[10]=a("该循环迭代并记录")),n[11]||(n[11]=s("code",null,"iterable",-1)),n[12]||(n[12]=a("作为")),s("a",v,[n[9]||(n[9]=a("可迭代对象")),o(t)]),n[13]||(n[13]=a("定义的迭代值，这些是数组元素 ")),n[14]||(n[14]=s("code",null,"3",-1)),n[15]||(n[15]=a(", ")),n[16]||(n[16]=s("code",null,"5",-1)),n[17]||(n[17]=a(", ")),n[18]||(n[18]=s("code",null,"7",-1)),n[19]||(n[19]=a("，而不是任何对象的")),n[20]||(n[20]=s("strong",null,"属性",-1)),n[21]||(n[21]=a("。"))])])}const y=p(r,[["render",m],["__file","JS循环小记.html.vue"]]);export{y as default};
