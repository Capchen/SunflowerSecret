const e=JSON.parse(`{"key":"v-7e235a73","path":"/Node/FS%E7%9B%B8%E5%85%B3.html","title":"FS相关","lang":"zh-CN","frontmatter":{"title":"FS相关","shortTitle":"","description":"fs模块是唯一一个同时提供同步和异步API的模块 fs.readdirSync(__dirname) 同步读取一个文件 fs.readdir('.',function(err, files){}) 异步读取文件 Stream 流，比起使用fs.readFile和rs.writeFile方法对文件进行读写操作， 使用Stream API来进行读写操作可以避免想上面的方法一样需要一次分配内存来进行操作，stream可以分段处理，这样在读取大文件或者上传大文件时有足够的操作空间。","icon":"","author":{"name":"Cap"},"isOriginal":true,"date":"2020-05-15T00:00:00.000Z","category":"","tag":"node","sticky":1,"star":false,"article":true,"timeline":true,"image":"","editLink":false,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/Node/FS%E7%9B%B8%E5%85%B3.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"FS相关"}],["meta",{"property":"og:description","content":"fs模块是唯一一个同时提供同步和异步API的模块 fs.readdirSync(__dirname) 同步读取一个文件 fs.readdir('.',function(err, files){}) 异步读取文件 Stream 流，比起使用fs.readFile和rs.writeFile方法对文件进行读写操作， 使用Stream API来进行读写操作可以避免想上面的方法一样需要一次分配内存来进行操作，stream可以分段处理，这样在读取大文件或者上传大文件时有足够的操作空间。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:published_time","content":"2020-05-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FS相关\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":3,"title":"Stream","slug":"stream","link":"#stream","children":[]}],"readingTime":{"minutes":0.53,"words":159},"filePathRelative":"Node/FS相关.md","localizedDate":"2020年5月15日","excerpt":"<p>fs模块是唯一一个同时提供同步和异步API的模块</p>\\n<ul>\\n<li>fs.readdirSync(__dirname) 同步读取一个文件</li>\\n<li>fs.readdir('.',function(err, files){}) 异步读取文件</li>\\n</ul>\\n<h3> Stream</h3>\\n<p>流，比起使用fs.readFile和rs.writeFile方法对文件进行读写操作，<br>\\n使用Stream API来进行读写操作可以避免想上面的方法一样需要一次分配内存来进行操作，stream可以分段处理，这样在读取大文件或者上传大文件时有足够的操作空间。</p>\\n","autoDesc":true}`);export{e as data};
