const t=JSON.parse('{"key":"v-c246b20a","path":"/React/%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5.html","title":"理解","lang":"zh-CN","frontmatter":{"description":"理解 React 哲学 React 可以改变你对可见设计和应用构建的思考。当你使用 React 构建用户界面时，你首先会把它分解成一个个 组件，然后，你需要把这些组件连接在一起，使数据流经它们。 从它的哲学：一个个组件，我们可以扩展出两个需要思考的性能问题： 大量组件下，如何保证用户界面的流程构建 在依赖网络请求的情况下，如何加快组件的获取 带着问题，我们去看React如何解决 大量组件（CPU瓶颈）","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/React/%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"理解"}],["meta",{"property":"og:description","content":"理解 React 哲学 React 可以改变你对可见设计和应用构建的思考。当你使用 React 构建用户界面时，你首先会把它分解成一个个 组件，然后，你需要把这些组件连接在一起，使数据流经它们。 从它的哲学：一个个组件，我们可以扩展出两个需要思考的性能问题： 大量组件下，如何保证用户界面的流程构建 在依赖网络请求的情况下，如何加快组件的获取 带着问题，我们去看React如何解决 大量组件（CPU瓶颈）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"理解\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"React 哲学","slug":"react-哲学","link":"#react-哲学","children":[]},{"level":2,"title":"大量组件（CPU瓶颈）","slug":"大量组件-cpu瓶颈","link":"#大量组件-cpu瓶颈","children":[]}],"readingTime":{"minutes":1.12,"words":336},"filePathRelative":"React/核心理念.md","excerpt":"<h1> 理解</h1>\\n<h2> React 哲学</h2>\\n<blockquote>\\n<p>React 可以改变你对可见设计和应用构建的思考。当你使用 React 构建用户界面时，你首先会把它分解成一个个 组件，然后，你需要把这些组件连接在一起，使数据流经它们。</p>\\n</blockquote>\\n<p>从它的哲学：一个个组件，我们可以扩展出两个需要思考的性能问题：</p>\\n<ol>\\n<li>大量组件下，如何保证用户界面的流程构建</li>\\n<li>在依赖网络请求的情况下，如何加快组件的获取</li>\\n</ol>\\n<p>带着问题，我们去看React如何解决</p>\\n<h2> 大量组件（CPU瓶颈）</h2>","autoDesc":true}');export{t as data};
