const e=JSON.parse('{"key":"v-76237bb9","path":"/Vue/Vue%E4%B8%8EReact%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"Vue与React的区别","lang":"zh-CN","frontmatter":{"title":"Vue与React的区别","shortTitle":"","description":"参考链接 从核心差异出发 从核心差异出发，能更清晰的将两者的不同形成脉络。 核心差异：Vue进行数据的拦截/代理，颗粒度更细。React偏重函数式，页面更新就是不断的执行函数。 从这个核心差异衍生出来的不同： 保证页面渲染性能的手段不一样 vue因为颗粒度更细，所以能采用依赖追踪，变多少，动多少，自动更新。React则将这个更新的心智通过 shouldComponentUpdate这个生命周期hook交给开发者控制）。（在这一块，他们也有共同点，例如合并更新操作。） Hooks的实现和表现不一致 React在每次render时都会按照顺序执行，但是vue主会被注册调用一次，因为他是基于数据代理观察的。这也就是为什么 vue会包装.value这么一层，因为基于对象代理观察，那么一些基本类型，number和string是没办法做到的。","icon":"","author":{"name":"Cap"},"isOriginal":true,"date":"2024-04-01T00:00:00.000Z","category":"","tag":"","sticky":100,"star":true,"article":true,"timeline":true,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/SunflowerSecret/Vue/Vue%E4%B8%8EReact%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"Cap"}],["meta",{"property":"og:title","content":"Vue与React的区别"}],["meta",{"property":"og:description","content":"参考链接 从核心差异出发 从核心差异出发，能更清晰的将两者的不同形成脉络。 核心差异：Vue进行数据的拦截/代理，颗粒度更细。React偏重函数式，页面更新就是不断的执行函数。 从这个核心差异衍生出来的不同： 保证页面渲染性能的手段不一样 vue因为颗粒度更细，所以能采用依赖追踪，变多少，动多少，自动更新。React则将这个更新的心智通过 shouldComponentUpdate这个生命周期hook交给开发者控制）。（在这一块，他们也有共同点，例如合并更新操作。） Hooks的实现和表现不一致 React在每次render时都会按照顺序执行，但是vue主会被注册调用一次，因为他是基于数据代理观察的。这也就是为什么 vue会包装.value这么一层，因为基于对象代理观察，那么一些基本类型，number和string是没办法做到的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cap"}],["meta",{"property":"article:published_time","content":"2024-04-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue与React的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cap\\"}]}"]]},"headers":[{"level":2,"title":"从核心差异出发","slug":"从核心差异出发","link":"#从核心差异出发","children":[]},{"level":2,"title":"共同点","slug":"共同点","link":"#共同点","children":[{"level":3,"title":"数据驱动视图","slug":"数据驱动视图","link":"#数据驱动视图","children":[]},{"level":3,"title":"组件化","slug":"组件化","link":"#组件化","children":[]},{"level":3,"title":"Virtual DOM","slug":"virtual-dom","link":"#virtual-dom","children":[]},{"level":3,"title":"单向数据流","slug":"单向数据流","link":"#单向数据流","children":[]}]},{"level":2,"title":"不同点","slug":"不同点","link":"#不同点","children":[{"level":3,"title":"实现数据驱动视图的方式","slug":"实现数据驱动视图的方式","link":"#实现数据驱动视图的方式","children":[]},{"level":3,"title":"设计风格","slug":"设计风格","link":"#设计风格","children":[]}]},{"level":2,"title":"React的特色","slug":"react的特色","link":"#react的特色","children":[]}],"readingTime":{"minutes":2.91,"words":874},"filePathRelative":"Vue/Vue与React的区别.md","localizedDate":"2024年4月1日","excerpt":"<ul>\\n<li><a href=\\"https://mp.weixin.qq.com/s/6QTdeM2l1htofCnKLZS6yw\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">参考链接</a></li>\\n</ul>\\n<h2> 从核心差异出发</h2>\\n<p>从核心差异出发，能更清晰的将两者的不同形成脉络。</p>\\n<p><strong>核心差异：Vue进行数据的拦截/代理，颗粒度更细。React偏重函数式，页面更新就是不断的执行函数。</strong></p>\\n<p>从这个核心差异衍生出来的不同：</p>\\n<ol>\\n<li>\\n<p>保证页面渲染性能的手段不一样<br>\\nvue因为颗粒度更细，所以能采用依赖追踪，变多少，动多少，自动更新。React则将这个更新的心智通过<br>\\nshouldComponentUpdate这个生命周期hook交给开发者控制）。（在这一块，他们也有共同点，例如合并更新操作。）</p>\\n</li>\\n<li>\\n<p>Hooks的实现和表现不一致<br>\\nReact在每次render时都会按照顺序执行，但是vue主会被注册调用一次，因为他是基于数据代理观察的。这也就是为什么<br>\\nvue会包装.value这么一层，因为基于对象代理观察，那么一些基本类型，number和string是没办法做到的。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
