import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,d as l}from"./app-f0a1e793.js";const r={},t=l('<h2 id="进程" tabindex="-1"><a class="header-anchor" href="#进程" aria-hidden="true">#</a> 进程</h2><p>浏览器是多进程架构，相比于单进程架构</p><ul><li>有数据隔离的能力</li><li>有多核优势</li><li>各司其职，互不影响。单页面崩溃不会影响其他页面</li></ul><h3 id="包含的进程" tabindex="-1"><a class="header-anchor" href="#包含的进程" aria-hidden="true">#</a> 包含的进程</h3><ol><li><p>Browser进程</p><p>主进程</p></li><li><p>插件进程</p><p>插件管理</p></li><li><p>GPU进程</p></li><li><p>渲染进程（浏览器内核）</p></li></ol><p>每个tab一个进程</p><h2 id="渲染进程" tabindex="-1"><a class="header-anchor" href="#渲染进程" aria-hidden="true">#</a> 渲染进程</h2><p>每个进程内部有多个线程，展开渲染进程:</p><ol><li>GUI渲染进程</li><li>JS引擎线程</li><li>事件触发线程</li><li>定时触发线程</li><li>异步http请求线程</li></ol><h3 id="gui渲染线程与js引擎线程互斥" tabindex="-1"><a class="header-anchor" href="#gui渲染线程与js引擎线程互斥" aria-hidden="true">#</a> GUI渲染线程与JS引擎线程互斥</h3><p>道理就是js可以操作dom，dom没确定，是不会去渲染页面。</p>',11),d=[t];function h(o,p){return e(),a("div",null,d)}const n=i(r,[["render",h],["__file","浏览器进程与线程.html.vue"]]);export{n as default};
