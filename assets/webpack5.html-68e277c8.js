import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as r,a as i}from"./app-a7d0c61b.js";const s={};function d(l,e){return n(),r("div",null,e[0]||(e[0]=[i(`<h2 id="node版本" tabindex="-1"><a class="header-anchor" href="#node版本" aria-hidden="true">#</a> node版本</h2><p>node版本最低需要<code>v10.13.0</code></p><h2 id="功能清除" tabindex="-1"><a class="header-anchor" href="#功能清除" aria-hidden="true">#</a> 功能清除</h2><ul><li>require.includes语法被废弃 ，这个语法是模块预加载</li><li>不再为node加载全部的polyfill，如果某个模块依赖了node.js的核心模块，之前的版本会将node的polyfill整个引入，5则不会</li></ul><h2 id="长期缓存" tabindex="-1"><a class="header-anchor" href="#长期缓存" aria-hidden="true">#</a> 长期缓存</h2><p>确定的moduleIds/chunkIds和导出名称<br> 文件没有改变，就不会改变</p><h2 id="持久化缓存" tabindex="-1"><a class="header-anchor" href="#持久化缓存" aria-hidden="true">#</a> 持久化缓存</h2><p>4里面需要使用cache-loader去做些优化<br> 5里面默认支持，cache字段控制</p><h2 id="tree-shaking" tabindex="-1"><a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a> Tree-Shaking</h2><ul><li>嵌套的tree-shaking ，嵌套的引入，会将无用的方法摇掉</li><li>内部模块的tree-shaking，分析内部模块的依赖关系，无用的依赖会被摇掉</li></ul><h2 id="代码生成" tabindex="-1"><a class="header-anchor" href="#代码生成" aria-hidden="true">#</a> 代码生成</h2><p>支持生成ES6模块代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">6</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开创性特性-模块联邦" tabindex="-1"><a class="header-anchor" href="#开创性特性-模块联邦" aria-hidden="true">#</a> 开创性特性：模块联邦</h2><p>概念：一个javascript应用程序可以在运行过程中动态加载另一个应用的代码，并支持共享依赖。不再需要本地加载依赖包</p><ul><li>Remote 被依赖方，被host消费的应用 （提供服务）</li><li>host 依赖方， 消费其他remote的应用（消费）</li></ul><p>webpack内部通过<code>ModuleFederationPlugin</code>插件实现的将多个模块联合起来</p>`,17)]))}const c=a(s,[["render",d],["__file","webpack5.html.vue"]]);export{c as default};
